var
mouseSpeed: Integer = 50;

Var
  wall:Integer;

var
globalx: Integer = 0;
var
globaly: Integer = 0;
var
globaltries: Integer = 20;



procedure humanWindMouse(xs, ys, xe, ye, gravity, wind, minWait, maxWait, targetArea: extended);
var
  veloX,veloY,windX,windY,veloMag,dist,randomDist,lastDist,D: extended;
  lastX,lastY,MSP,W,TDist: integer;
  T : LongWord;
  sqrt2,sqrt3,sqrt5,maxStep,rCnc: extended;
begin
  MSP  := mouseSpeed;
  sqrt2:= sqrt(2);
  sqrt3:= sqrt(3);
  sqrt5:= sqrt(5);

  TDist := distance(round(xs), round(ys), round(xe), round(ye));
  t := getSystemTime() + 10000;
  repeat
    if (getSystemTime() > t) then
      break;

    dist:= hypot(xs - xe, ys - ye);
    wind:= minE(wind, dist);
    if (dist < 1) then
      dist := 1;

    D := (round((round(TDist)*0.3))/7);
    if (D > 25) then
      D := 25;
    if (D < 5) then
      D := 5;

    rCnc := random(6);
    if (rCnc = 1) then
      D := randomRange(2,3);

    if (D <= round(dist)) then
      maxStep := D
    else
      maxStep := round(dist);

    if dist >= targetArea then
    begin
      windX:= windX / sqrt3 + (random(round(wind) * 2 + 1) - wind) / sqrt5;
      windY:= windY / sqrt3 + (random(round(wind) * 2 + 1) - wind) / sqrt5;
    end else
    begin
      windX:= windX / sqrt2;
      windY:= windY / sqrt2;
    end;

    veloX:= veloX + windX;
    veloY:= veloY + windY;
    veloX:= veloX + gravity * (xe - xs) / dist;
    veloY:= veloY + gravity * (ye - ys) / dist;

    if (hypot(veloX, veloY) > maxStep) then
    begin
      randomDist:= maxStep / 2.0 + random(round(maxStep) div 2);
      veloMag:= sqrt(veloX * veloX + veloY * veloY);
      veloX:= (veloX / veloMag) * randomDist;
      veloY:= (veloY / veloMag) * randomDist;
    end;

    lastX:= round(xs);
    lastY:= round(ys);
    xs:= xs + veloX;
    ys:= ys + veloY;

    if (lastX <> round(xs)) or (lastY <> round(ys)) then
      moveMouse(round(xs), round(ys));

    W := (random((round(100/MSP)))*6);
    if (W < 5) then
      W := 5;
    W := round(W*0.9);
    wait(W);
    lastdist:= dist;
  until(hypot(xs - xe, ys - ye) < 1)

  if (round(xe) <> round(xs)) or (round(ye) <> round(ys)) then
    moveMouse(round(xe), round(ye));

  mouseSpeed := MSP;
end;

procedure brakeWindMouse(xs, ys, xe, ye, gravity, wind, minWait, maxWait,
          targetArea: extended; double: boolean);
var
  veloX,veloY,windX,windY,veloMag,dist,randomDist,lastDist,D: extended;
  lastX,lastY,MSP,W,TDist: integer;
  T : LongWord;
  sqrt2,sqrt3,sqrt5,PDist,maxStep,dModA,dModB,nModA,nModB: extended;
begin
  MSP  := mouseSpeed;
  sqrt2:= sqrt(2);
  sqrt3:= sqrt(3);
  sqrt5:= sqrt(5);



  TDist := distance(round(xs), round(ys), round(xe), round(ye));
  if (TDist < 1) then
    TDist := 1;

  dModA := 0.88; //.80
  dModB := 0.95; //.90

  if (TDist > 220) then
  begin
    nModA := 0.08;
    nModB := 0.04;
  end else if (TDist <= 220) then
  begin
    nModA := 0.20;
    nModB := 0.10;
  end;

  t := getSystemTime() + 5000;
  repeat
    if (getSystemTime() > t) then
      break;

    dist:= hypot(xs - xe, ys - ye);
    wind:= minE(wind, dist);
    if (dist < 1) then
      dist := 1;
    PDist := (dist/TDist);
    if (PDist < 0.01) then
      PDist := 0.01;

    if double then
    begin
      if (PDist <= dModA) then
      begin
        D := (round((round(dist)*0.3))/5);
        if (D < 20) then
          D := 20;

      end else if (PDist > dModA) then
      begin
        if (PDist < dModB) then
          D := randomRange(5, 8)
        else if (PDist >= dModB) then
          D := randomRange(3, 4);
      end;
    end;

    if (PDist >= nModA) then
    begin
       D := (round((round(dist)*0.3))/5);
      if (D < 20) then
        D := 20;
    end else if (PDist < nModA) then
    begin
      if (PDist >= nModB) then
        D := randomRange(5, 8)
      else if (PDist < nModB) then
        D := randomRange(3, 4);
    end;

    if (D <= round(dist)) then
      maxStep := D
    else
      maxStep := round(dist);

    if dist >= targetArea then
    begin
      windX:= windX / sqrt3 + (random(round(wind) * 2 + 1) - wind) / sqrt5;
      windY:= windY / sqrt3 + (random(round(wind) * 2 + 1) - wind) / sqrt5;
    end else
    begin
      windX:= windX / sqrt2;
      windY:= windY / sqrt2;
    end;

    veloX:= veloX + windX;
    veloY:= veloY + windY;
    veloX:= veloX + gravity * (xe - xs) / dist;
    veloY:= veloY + gravity * (ye - ys) / dist;

    if (hypot(veloX, veloY) > maxStep) then
    begin
      randomDist:= maxStep / 2.0 + random(round(maxStep) div 2);
      veloMag:= sqrt(veloX * veloX + veloY * veloY);
      veloX:= (veloX / veloMag) * randomDist;
      veloY:= (veloY / veloMag) * randomDist;
    end;

    lastX:= round(xs);
    lastY:= round(ys);
    xs:= xs + veloX;
    ys:= ys + veloY;

    if (lastX <> round(xs)) or (lastY <> round(ys)) then
      moveMouse(round(xs), round(ys));

    W := (random((round(100/MSP)))*6);
    if (W < 5) then
      W := 5;
    if double then
      if (PDist > dModA) then
        W := round(W*2.5)
    else
      W := round(W*1.2);
    wait(W);
    lastdist:= dist;
  until(hypot(xs - xe, ys - ye) < 1)

  if (round(xe) <> round(xs)) or (round(ye) <> round(ys)) then
    moveMouse(round(xe), round(ye));

  mouseSpeed := MSP;
end;

(*
 Mu is the mean, sigma is the standard deviation.
*)
procedure GaussWait(Mu,Sigma:Double; vmin:Double=30);
var t,g:Double;
begin
  t := 2 * PI * Random();
  g := mu + (sigma * Sqrt(-2 * Ln(Random()))) * Cos(t);
  //WriteLn('Waiting: ', Round( MaxE(g,vmin) ),'ms');
  Wait(Round(MaxE(g,vmin)));
end;

function randposition(Mu,Sigma,min,max:Double): Integer;
var t,g:Double;
begin
  t := 2 * PI * Random();
  g := mu + (sigma * Sqrt(-2 * Ln(Random()))) * Cos(t);

  if (g<min) then
    g := min;
  if (g > max) then
    g := max;

  Result := Round(g);
end;




var startx, starty, endx, endy:integer;

procedure cMousemove(xpos,ypos:integer);
begin
  endx := randposition(xpos,3,xpos-3*3,xpos+3*3);
  endy := randposition(ypos,3,ypos-3*3,ypos+3*3);

  GetMousePos(startx, starty);

  //brakeWindMouse(startx, starty, endx, endy, randomRange(8,15), randomRange(1,8), randomRange(2,15),randomRange(10,20), 10.0,1);
  brakeWindMouse(startx, starty, endx, endy, randomRange(8,20), randomRange(1,15), randomRange(2,10),randomRange(10,15), 10.0,1);
  //wait(50);

end;
var q,w:integer;
var sx,sy:integer;
procedure cMouseMoveRock(xpos,ypos:integer);
begin
  endx := randposition(xpos,4,xpos-4*4,xpos+4*4);
  endy := randposition(ypos,4,ypos-4*4,ypos+4*4);

  GetMousePos(startx, starty);

  //brakeWindMouse(startx, starty, endx, endy, randomRange(8,15), randomRange(1,8), randomRange(2,15),randomRange(10,20), 10.0,1);
  brakeWindMouse(startx, starty, endx, endy, randomRange(8,20), randomRange(1,15), randomRange(2,10),randomRange(10,15), 10.0,1);
  //wait(50);

end;

//var q,w:integer;
//var sx,sy:integer;
procedure cMouseMoveLadder(xpos,ypos:integer);
begin
  endx := randposition(xpos,2,xpos-2*2,xpos+2*2);
  endy := randposition(ypos,2,ypos-2*2,ypos+2*2);

  GetMousePos(startx, starty);

  //brakeWindMouse(startx, starty, endx, endy, randomRange(8,15), randomRange(1,8), randomRange(2,15),randomRange(10,20), 10.0,1);
  brakeWindMouse(startx, starty, endx, endy, randomRange(8,20), randomRange(1,15), randomRange(2,10),randomRange(10,15), 10.0,1);
  //wait(50);

end;

var
  fileName,Bot_SavePath,writestring,writestring2: string;
  tmpFile: integer;

function OpenReportFile(): integer;
var
  fileName,Bot_SavePath: string;
begin

  fileName := 'Test.txt'; // file name

    if (fileExists(fileName)) then // checks if the file exists
      result := appendFile(fileName)
    else
      result := createFile(fileName); // if it does not exist it creates it

end;


procedure writemousetofile(t1,t2:integer);
begin
  //  writeln('writing'); // writeln the text

  tmpFile := OpenReportFile(); // refers to the function above and opens the file



  writestring := 'click ';
  writestring2 := tostring(t1)+','+toString(t2);

  if (tmpFile >= 0) then
     writeFileString(tmpFile, writestring+writestring2+#13#10); // writes the text and the time stamp

      closeFile(tmpFile); // closes the file

      //writeln('write done');

end;


var esc1:integer = 917;
var esc2:integer = 357;
var b1,b2,tempx,tempy:integer;
procedure cMouseclick();
begin

  //if(FindColorTolerance(b1,b2,6913162  ,927, 354,927, 354,40)) then
    //  begin
      //  WriteLn('pressing esc');
       // Keydown(27);
        //Wait(50);
    //    Keyup(27);
      //  wait(200);

    //  end;


  GetMousePos(tempx, tempy);
  writemousetofile(tempx,tempy);
  HoldMouse(tempx, tempy, mouse_Left);
  GaussWait(randomRange(52,155),50);
  ReleaseMouse(tempx, tempy, mouse_Left);
  WriteLn('clicked');

end;

//var q,w:integer;
procedure cMouseclickRock();
begin

  //if(FindColorTolerance(b1,b2,6913162  ,927, 354,927, 354,40)) then
    //  begin
      //  WriteLn('pressing esc');
       // Keydown(27);
        //Wait(50);
    //    Keyup(27);
      //  wait(200);

    //  end;


  GetMousePos(tempx, tempy);
  writemousetofile(tempx,tempy);
  HoldMouse(tempx, tempy, mouse_Left);
  GaussWait(randomRange(52,155),50);
  ReleaseMouse(tempx, tempy, mouse_Left);
  WriteLn('clicked');

end;
  var tempyyy:integer =  0;
procedure cMouseBuildFast();
begin
      wait(randomRange(30,200));

  GetMousePos(tempx, tempy);
  writemousetofile(tempx,tempy);
  HoldMouse(tempx, tempy, mouse_Right);
  ReleaseMouse(tempx, tempy, mouse_Right);
  WriteLn('clicked');

  GetMousePos(tempx, tempy);

  tempyyy := tempy+60;

  brakeWindMouse(tempx, tempy, tempx, tempyyy, randomRange(8,20), randomRange(1,15), randomRange(2,10),randomRange(10,15), 10.0,1);
       wait(randomRange(30,50));
 cMouseclick();
  //y + 60

    GaussWait(randomRange(2000,2500),300);

    keyDown(98);
    wait(150);
    keyUp(98);

    GaussWait(randomRange(3000,4000),300);

end;

//var q,w:integer;
procedure cMouseclickLadder();
begin

  //if(FindColorTolerance(b1,b2,6913162  ,927, 354,927, 354,40)) then
    //  begin
      //  WriteLn('pressing esc');
       // Keydown(27);
        //Wait(50);
    //    Keyup(27);
      //  wait(200);

    //  end;


  GetMousePos(tempx, tempy);
  writemousetofile(tempx,tempy);
  HoldMouse(tempx, tempy, mouse_Left);
  GaussWait(randomRange(52,155),50);
  ReleaseMouse(tempx, tempy, mouse_Left);
  WriteLn('clicked');

end;

var finalx, finaly, fishfound,clickfishx,clickfishy,tempn,rocknumber,option: integer;
procedure clickfish();
begin

if(rocknumber<1)then
begin
//////////////
option := randomRange(1,10000);
  if(option<2000) then
  begin
    cMouseMoveRock(365,267);
    cMouseClickRock();
  end
  else if(option<5000) then
  begin
    cMouseMoveRock(345,243);
    cMouseClickRock();
  end
  else
  begin
    cMouseMoveRock(386,234);
    cMouseClickRock();
  end;
  /////////////////////

  rocknumber := 1;
end
else
begin
///////////////

option := randomRange(1,10000);
  if(option<2000) then
  begin
    cMouseMoveRock(697,290);
    cMouseClickRock();
  end
  else if(option<5000) then
  begin
    cMouseMoveRock(725,248);
    cMouseClickRock();
  end
  else
  begin
    cMouseMoveRock(747,275);
    cMouseClickRock();
  end;

///////////////////

  rockNumber := 0;
end;
end;


var pouchx,pouchy:integer;

procedure drop();
begin
 WriteLn('liking ess pouhes');
 //wait(100000);

  KeyDown(16);

  ///////////////////////
option := randomRange(1,10000);
  if(option<2000) then
  begin
    cMouseMove(647,529);
    cMouseClick();
  end
  else if(option<5000) then
  begin
    cMouseMove(658,528);
    cMouseClick();
  end
  else
  begin
    cMouseMove(653,524);
    cMouseClick();
  end;
option := randomRange(1,10000);
  if(option<2000) then
  begin
    cMouseMove(648,494);
    cMouseClick();
  end
  else if(option<5000) then
  begin
    cMouseMove(656,495);
    cMouseClick();
  end
  else
  begin
    cMouseMove(654,489);
    cMouseClick();
  end;
option := randomRange(1,10000);
  if(option<2000) then
  begin
    cMouseMove(691,494);
    cMouseClick();
  end
  else if(option<5000) then
  begin
    cMouseMove(699,492);
    cMouseClick();
  end
  else
  begin
    cMouseMove(694,485);
    cMouseClick();
  end;


  wait(50);
  KeyUp(16);

  wait(50);
  ///////////////////////////

  rockNumber := 0;
end;


var dropx,dropy:integer;

var x,y,counter,found,isfishing, fishtrynumber: integer;

begin

    repeat

    begin
        //click on banker
option := randomRange(1,10000);
  if(option<2000) then
  begin
    cMouseMoveLadder(447,328);
    cMouseClickLadder();
  end
  else if(option<5000) then
  begin
    cMouseMoveLadder(449,335);
    cMouseClickLadder();
  end
  else
  begin
    cMouseMoveLadder(448,331);
    cMouseClickLadder();
  end;


            GaussWait(randomRange(1500,1700),50);

        //if run energy low click on stamina potion
if(FindColorTolerance(x,y,367538,820, 716, 823, 718,10)) then
begin
option := randomRange(1,10000);
  if(option<2000) then
  begin
    cMouseMove(315,416);
    cMouseClick();
  end
  else if(option<5000) then
  begin
    cMouseMove(315,412);
    cMouseClick();
  end
  else
  begin
    cMouseMove(316,407);
    cMouseClick();
  end;

          ////

          GaussWait(randomRange(400,550),10);

          WriteLn('pressing shift');
          Keydown(16);
          ///

   ////drink potion
option := randomRange(1,10000);
  if(option<2000) then
  begin
    cMouseMove(653,703);
    cMouseClick();
  end
  else if(option<5000) then
  begin
    cMouseMove(654,708);
    cMouseClick();
  end
  else
  begin
    cMouseMove(650,710);
    cMouseClick();
  end;

  wait(50);
  KeyUp(16);
  wait(150);

end;
        //Deposite All
option := randomRange(1,10000);
  if(option<2000) then
  begin
    cMouseMove(473,567);
    cMouseClick();
  end
  else if(option<5000) then
  begin
    cMouseMove(481,566);
    cMouseClick();
  end
  else
  begin
    cMouseMove(481,574);
    cMouseClick();
  end;


            GaussWait(randomRange(100,200),10);

          //click ess to withdrawl
option := randomRange(1,10000);
  if(option<2000) then
  begin
    cMouseMove(264,445);
    cMouseClick();
  end
  else if(option<5000) then
  begin
    cMouseMove(270,439);
    cMouseClick();
  end
  else
  begin
    cMouseMove(271,446);
    cMouseClick();
  end;

              GaussWait(randomRange(50,100),10);

////run clicking of ess pouches procedure
begin
drop();
end


            GaussWait(randomRange(50,100),10);

          //click ess to withdrawl
option := randomRange(1,10000);
  if(option<2000) then
  begin
    cMouseMove(264,445);
    cMouseClick();
  end
  else if(option<5000) then
  begin
    cMouseMove(270,439);
    cMouseClick();
  end
  else
  begin
    cMouseMove(271,446);
    cMouseClick();
  end;

          ////
          GaussWait(randomRange(100,200),200);
          WriteLn('pressing esc');
          Keydown(27);
          GaussWait(randomRange(52,220),10);
          Keyup(27);
          wait(100);
          ///

////altar
option := randomRange(1,10000);
  if(option<2000) then
  begin
    cMouseMove(34,64);
    cMouseClick();
  end
  else if(option<5000) then
  begin
    cMouseMove(36,66);
    cMouseClick();
  end
  else
  begin
    cMouseMove(34,68);
    cMouseClick();
  end;


        GaussWait(randomRange(28000,28500),100);

counter := 0 ;
repeat

counter := counter + 1   ;

////run clicking of ess pouches procedure
begin
drop();
end

        //click on alter again
option := randomRange(1,10000);
  if(option<2000) then
  begin
    cMouseMoveRock(379,387);
    cMouseClickRock();
  end
  else if(option<5000) then
  begin
    cMouseMoveRock(388,396);
    cMouseClickRock();
  end
  else
  begin
    cMouseMoveRock(392,386);
    cMouseClickRock();
  end;



          GaussWait(randomRange(1700,1900),100);

until (counter>1)    ;



          ////
          WriteLn('pressing f1 magic tab');
          Keydown(112);
          GaussWait(randomRange(52,282),10);
          Keyup(112);
          wait(200);
          ///


                  //SMALL click on magic spell teleport back to begining
option := randomRange(1,10000);
  if(option<2000) then
  begin
    cMouseMoveLadder(787,512);
    cMouseClickLadder();
  end
  else if(option<5000) then
  begin
    cMouseMoveLadder(788,509);
    cMouseClickLadder();
  end
  else
  begin
    cMouseMoveLadder(790,513);
    cMouseClickLadder();
  end;

            ////

          WriteLn('pressing esc');
          Keydown(27);
          GaussWait(randomRange(52,282),10);
          Keyup(27);
          wait(200);
          ///

                    GaussWait(randomRange(1800,2000),100);

        //if pouh is degraded then ontat the dark mage
if(FindColorTolerance(x,y,643282,607, 466, 777, 708,10)) then
if(FindColorTolerance(x,y,1315868,648, 526, 658, 531,10)) then
begin

          ////
          wait(400);
          WriteLn('pressing f1 magic tab');
          Keydown(112);
          GaussWait(randomRange(52,282),10);
          Keyup(112);
          wait(200);
          ///

                      GaussWait(randomRange(400,800),100);

option := randomRange(1,10000);
  if(option<2000) then
  begin
    cMouseMoveLadder(643,513);
    cMouseClickLadder();
  end
  else if(option<5000) then
  begin
    cMouseMoveLadder(647,514);
    cMouseClickLadder();
  end
  else
  begin
    cMouseMoveLadder(645,509);
    cMouseClickLadder();
  end;

            GaussWait(randomRange(900,1100),100);

option := randomRange(1,10000);
  if(option<2000) then
  begin
    cMouseMoveRock(280,248);
    cMouseClickRock();
  end
  else if(option<5000) then
  begin
    cMouseMoveRock(286,230);
    cMouseClickRock();
  end
  else
  begin
    cMouseMoveRock(289,249);
    cMouseClickRock();
  end;

              GaussWait(randomRange(5000,6000),100);

          ////
          WriteLn('pressing spae bar');
          Keydown(32);
          GaussWait(randomRange(52,200),100);
          Keyup(32);
          wait(200);
          ///

                    GaussWait(randomRange(600,800),10);

                    ////
          WriteLn('pressing spae bar');
          Keydown(32);
          GaussWait(randomRange(52,200),100);
          Keyup(32);
          wait(200);
          ///

                    GaussWait(randomRange(600,800),10);

                    ////
          WriteLn('pressing spae bar');
          Keydown(32);
          GaussWait(randomRange(52,200),100);
          Keyup(32);
          wait(200);
          ///

                              GaussWait(randomRange(600,800),10);

                    ////
          WriteLn('pressing spae bar');
          Keydown(32);
          GaussWait(randomRange(52,200),100);
          Keyup(32);
          wait(200);
          ///

                    ////
          WriteLn('pressing esc');
          Keydown(27);
          GaussWait(randomRange(52,282),10);
          Keyup(27);
          wait(200);
          ///

end;




                    GaussWait(randomRange(1200,1400),100);

        //click on ladder to get back down
         wall:= BitmapFromString(1, 1, 'meJx7+PoNAAVoArk=' + 'meJx79OYtAAVuArw=');

       writeln('trying to find');
       If (FindBitmapToleranceIn(wall, X, Y,580,330,800,410,5)) Then //This will search the screen for the bitmap
       begin
         Y := Y + 15;
         X := X + 50;
          cMouseMoveLadder(X,Y);
          cMouseclickLadder();
          found := 1;
        end
        Else
        Writeln('Could not find ladder'); //Tells us we didn't find it

        FreeBitmap(wall);

        GaussWait(randomRange(6800,7200),50);
        end

        //click on ladder
option := randomRange(1,10000);
  if(option<2000) then
  begin
    cMouseMoveLadder(430,126);
    cMouseClickLadder();
  end
  else if(option<5000) then
  begin
    cMouseMoveLadder(428,123);
    cMouseClickLadder();
  end
  else
  begin
    cMouseMoveLadder(426,118);
    cMouseClickLadder();
  end;

          GaussWait(randomRange(7200,7900),100);


    until (1>2)
end;
