var
mouseSpeed: Integer = 35;

var
  Counter: Integer;
procedure humanWindMouse(xs, ys, xe, ye, gravity, wind, minWait, maxWait, targetArea: extended);
var
  veloX,veloY,windX,windY,veloMag,dist,randomDist,lastDist,D: extended;
  lastX,lastY,MSP,W,TDist: integer;
  T : LongWord;
  sqrt2,sqrt3,sqrt5,maxStep,rCnc: extended;
begin
  MSP  := mouseSpeed;
  sqrt2:= sqrt(2);
  sqrt3:= sqrt(3);
  sqrt5:= sqrt(5);

  TDist := distance(round(xs), round(ys), round(xe), round(ye));
  t := getSystemTime() + 10000;
  repeat
    if (getSystemTime() > t) then
      break;

    dist:= hypot(xs - xe, ys - ye);
    wind:= minE(wind, dist);
    if (dist < 1) then
      dist := 1;

    D := (round((round(TDist)*0.3))/7);
    if (D > 25) then
      D := 25;
    if (D < 5) then
      D := 5;

    rCnc := random(6);
    if (rCnc = 1) then
      D := randomRange(2,3);

    if (D <= round(dist)) then
      maxStep := D
    else
      maxStep := round(dist);

    if dist >= targetArea then
    begin
      windX:= windX / sqrt3 + (random(round(wind) * 2 + 1) - wind) / sqrt5;
      windY:= windY / sqrt3 + (random(round(wind) * 2 + 1) - wind) / sqrt5;
    end else
    begin
      windX:= windX / sqrt2;
      windY:= windY / sqrt2;
    end;

    veloX:= veloX + windX;
    veloY:= veloY + windY;
    veloX:= veloX + gravity * (xe - xs) / dist;
    veloY:= veloY + gravity * (ye - ys) / dist;

    if (hypot(veloX, veloY) > maxStep) then
    begin
      randomDist:= maxStep / 2.0 + random(round(maxStep) div 2);
      veloMag:= sqrt(veloX * veloX + veloY * veloY);
      veloX:= (veloX / veloMag) * randomDist;
      veloY:= (veloY / veloMag) * randomDist;
    end;

    lastX:= round(xs);
    lastY:= round(ys);
    xs:= xs + veloX;
    ys:= ys + veloY;

    if (lastX <> round(xs)) or (lastY <> round(ys)) then
      moveMouse(round(xs), round(ys));

    W := (random((round(100/MSP)))*6);
    if (W < 5) then
      W := 5;
    W := round(W*0.9);
    wait(W);
    lastdist:= dist;
  until(hypot(xs - xe, ys - ye) < 1)

  if (round(xe) <> round(xs)) or (round(ye) <> round(ys)) then
    moveMouse(round(xe), round(ye));

  mouseSpeed := MSP;
end;

procedure brakeWindMouse(xs, ys, xe, ye, gravity, wind, minWait, maxWait,
          targetArea: extended; double: boolean);
var
  veloX,veloY,windX,windY,veloMag,dist,randomDist,lastDist,D: extended;
  lastX,lastY,MSP,W,TDist: integer;
  T : LongWord;
  sqrt2,sqrt3,sqrt5,PDist,maxStep,dModA,dModB,nModA,nModB: extended;
begin
  MSP  := mouseSpeed;
  sqrt2:= sqrt(2);
  sqrt3:= sqrt(3);
  sqrt5:= sqrt(5);



  TDist := distance(round(xs), round(ys), round(xe), round(ye));
  if (TDist < 1) then
    TDist := 1;

  dModA := 0.88; //.80
  dModB := 0.95; //.90

  if (TDist > 220) then
  begin
    nModA := 0.08;
    nModB := 0.04;
  end else if (TDist <= 220) then
  begin
    nModA := 0.20;
    nModB := 0.10;
  end;

  t := getSystemTime() + 5000;
  repeat
    if (getSystemTime() > t) then
      break;

    dist:= hypot(xs - xe, ys - ye);
    wind:= minE(wind, dist);
    if (dist < 1) then
      dist := 1;
    PDist := (dist/TDist);
    if (PDist < 0.01) then
      PDist := 0.01;

    if double then
    begin
      if (PDist <= dModA) then
      begin
        D := (round((round(dist)*0.3))/5);
        if (D < 20) then
          D := 20;

      end else if (PDist > dModA) then
      begin
        if (PDist < dModB) then
          D := randomRange(5, 8)
        else if (PDist >= dModB) then
          D := randomRange(3, 4);
      end;
    end;

    if (PDist >= nModA) then
    begin
       D := (round((round(dist)*0.3))/5);
      if (D < 20) then
        D := 20;
    end else if (PDist < nModA) then
    begin
      if (PDist >= nModB) then
        D := randomRange(5, 8)
      else if (PDist < nModB) then
        D := randomRange(3, 4);
    end;

    if (D <= round(dist)) then
      maxStep := D
    else
      maxStep := round(dist);

    if dist >= targetArea then
    begin
      windX:= windX / sqrt3 + (random(round(wind) * 2 + 1) - wind) / sqrt5;
      windY:= windY / sqrt3 + (random(round(wind) * 2 + 1) - wind) / sqrt5;
    end else
    begin
      windX:= windX / sqrt2;
      windY:= windY / sqrt2;
    end;

    veloX:= veloX + windX;
    veloY:= veloY + windY;
    veloX:= veloX + gravity * (xe - xs) / dist;
    veloY:= veloY + gravity * (ye - ys) / dist;

    if (hypot(veloX, veloY) > maxStep) then
    begin
      randomDist:= maxStep / 2.0 + random(round(maxStep) div 2);
      veloMag:= sqrt(veloX * veloX + veloY * veloY);
      veloX:= (veloX / veloMag) * randomDist;
      veloY:= (veloY / veloMag) * randomDist;
    end;

    lastX:= round(xs);
    lastY:= round(ys);
    xs:= xs + veloX;
    ys:= ys + veloY;

    if (lastX <> round(xs)) or (lastY <> round(ys)) then
      moveMouse(round(xs), round(ys));

    W := (random((round(100/MSP)))*6);
    if (W < 5) then
      W := 5;
    if double then
      if (PDist > dModA) then
        W := round(W*2.5)
    else
      W := round(W*1.2);
    wait(W);
    lastdist:= dist;
  until(hypot(xs - xe, ys - ye) < 1)

  if (round(xe) <> round(xs)) or (round(ye) <> round(ys)) then
    moveMouse(round(xe), round(ye));

  mouseSpeed := MSP;
end;

(*
 Mu is the mean, sigma is the standard deviation.
*)
procedure GaussWait(Mu,Sigma:Double; vmin:Double=30);
var t,g:Double;
begin
  t := 2 * PI * Random();
  g := mu + (sigma * Sqrt(-2 * Ln(Random()))) * Cos(t);
  //WriteLn('Waiting: ', Round( MaxE(g,vmin) ),'ms');
  Wait(Round(MaxE(g,vmin)));
end;

function randposition(Mu,Sigma,min,max:Double): Integer;
var t,g:Double;
begin
  t := 2 * PI * Random();
  g := mu + (sigma * Sqrt(-2 * Ln(Random()))) * Cos(t);

  if (g<min) then
    g := min;
  if (g > max) then
    g := max;

  Result := Round(g);
end;


var startx, starty, endx, endy:integer;

procedure cMousemove(xpos,ypos:integer);
begin
  endx := randposition(xpos,3,xpos-3*3,xpos+3*3);
  endy := randposition(ypos,3,ypos-3*3,ypos+3*3);

  GetMousePos(startx, starty);

  //brakeWindMouse(startx, starty, endx, endy, randomRange(8,15), randomRange(1,8), randomRange(2,15),randomRange(10,20), 10.0,1);
  brakeWindMouse(startx, starty, endx, endy, randomRange(8,20), randomRange(1,15), randomRange(2,10),randomRange(10,15), 10.0,1);
  //wait(50);

end;

procedure cMouseMoveRock(xpos,ypos:integer);
begin
  endx := randposition(xpos,3,xpos-3*3,xpos+3*3);
  endy := randposition(ypos,3,ypos-3*3,ypos+3*3);

  GetMousePos(startx, starty);

  //brakeWindMouse(startx, starty, endx, endy, randomRange(8,15), randomRange(1,8), randomRange(2,15),randomRange(10,20), 10.0,1);
  brakeWindMouse(startx, starty, endx, endy, randomRange(8,20), randomRange(1,15), randomRange(2,10),randomRange(10,15), 10.0,1);
  //wait(50);

end;

//var q,w:integer;
//var sx,sy:integer;
procedure cMouseMoveLadder(xpos,ypos:integer);
begin
  endx := randposition(xpos,2,xpos-2*2,xpos+2*2);
  endy := randposition(ypos,2,ypos-2*2,ypos+2*2);

  GetMousePos(startx, starty);

  //brakeWindMouse(startx, starty, endx, endy, randomRange(8,15), randomRange(1,8), randomRange(2,15),randomRange(10,20), 10.0,1);
  brakeWindMouse(startx, starty, endx, endy, randomRange(8,20), randomRange(1,15), randomRange(2,10),randomRange(10,15), 10.0,1);
  //wait(50);

end;

var
  fileName,Bot_SavePath,writestring,writestring2: string;
  tmpFile: integer;

function OpenReportFile(): integer;
var
  fileName,Bot_SavePath: string;
begin

  fileName := 'Test.txt'; // file name

    if (fileExists(fileName)) then // checks if the file exists
      result := appendFile(fileName)
    else
      result := createFile(fileName); // if it does not exist it creates it

end;


procedure writemousetofile(t1,t2:integer);
begin
  //  writeln('writing'); // writeln the text

  tmpFile := OpenReportFile(); // refers to the function above and opens the file



  writestring := 'click ';
  writestring2 := tostring(t1)+','+toString(t2);

  if (tmpFile >= 0) then
     writeFileString(tmpFile, writestring+writestring2+#13#10); // writes the text and the time stamp

      //closeFile(tmpFile); // closes the file

      //writeln('write done');

end;


var b1,b2,tempx,tempy:integer;
procedure cMouseclick();
begin

  //if(FindColorTolerance(b1,b2,6913162  ,927, 354,927, 354,40)) then
    //  begin
      //  WriteLn('pressing esc');
       // Keydown(27);
        //Wait(50);
    //    Keyup(27);
      //  wait(200);

    //  end;

      //wait(randomRange(30,200));


             WriteLn('clicked');

  GetMousePos(tempx, tempy);
  writemousetofile(tempx,tempy);
  HoldMouse(tempx, tempy, mouse_Left);
  //GaussWait(randomRange(54,154),5);
  ReleaseMouse(tempx, tempy, mouse_Left);
          wait(randomRange(20,80));

end;

var q,w:integer;
procedure cMouseclickRock();
begin

  GetMousePos(tempx, tempy);
      //not sure what this does
  // if(FindColorTolerance(b1,b2,6913162  ,927, 354,927, 354,40)) then
  //    begin
  //      WriteLn('pressing esc');
   //     Keydown(27);
    //    Wait(50);
   //     Keyup(27);
   //     wait(200);

   //   end;

  wait(100);

  if(FindColorTolerance(q,w,13093124,10, 34, 91, 52,40)) then
  begin
    writemousetofile(tempx,tempy);
    HoldMouse(tempx, tempy, mouse_Left);
    ReleaseMouse(tempx, tempy, mouse_Left);
  end;



end;

//var q,w:integer;
procedure cMouseclickLadder();
begin

  //if(FindColorTolerance(b1,b2,6913162  ,927, 354,927, 354,40)) then
    //  begin
      //  WriteLn('pressing esc');
       // Keydown(27);
        //Wait(50);
    //    Keyup(27);
      //  wait(200);

    //  end;


  GetMousePos(tempx, tempy);
  writemousetofile(tempx,tempy);
  HoldMouse(tempx, tempy, mouse_Left);
  GaussWait(randomRange(52,155),50);
  ReleaseMouse(tempx, tempy, mouse_Left);
  WriteLn('clicked');

end;

var finalx, finaly, fishfound,clickfishx,clickfishy,tempn,rocknumber,option: integer;
procedure clickfish();
begin

if(rocknumber<1)then
begin
//////////////Ore 1//////////////////
option := randomRange(1,10000);
  if(option<2000) then
  begin
    cMouseMoveRock(376,410);
    cMouseClickRock();
  end
  else if(option<5000) then
  begin
    cMouseMoveRock(385,417);
    cMouseClickRock();
  end
  else
  begin
    cMouseMoveRock(385,405);
    cMouseClickRock();
  end;
  /////////////////////

  rocknumber := 1;
end
else
begin

//////////////Ore 2//////////////////
option := randomRange(1,10000);
  if(option<2000) then
  begin
    cMouseMoveRock(338,365);
    cMouseClickRock();
  end
  else if(option<5000) then
  begin
    cMouseMoveRock(346,372);
    cMouseClickRock();
  end
  else
  begin
    cMouseMoveRock(337,375);
    cMouseClickRock();
  end;
  /////////////////

            GaussWait(randomRange(1600,1700),50);

//////////////Ore 3//////////////////
option := randomRange(1,10000);
  if(option<2000) then
  begin
    cMouseMoveRock(387,318);
    cMouseClickRock();
  end
  else if(option<5000) then
  begin
    cMouseMoveRock(380,326);
    cMouseClickRock();
  end
  else
  begin
    cMouseMoveRock(387,335);
    cMouseClickRock();
  end;
///////////////////

  rockNumber := 0;
end;
end;

var dropx,dropy:integer;

procedure drop();
begin
 WriteLn('dropping');
 //wait(100000);

  //KeyDown(16);

  ///////////////////////
option := randomRange(1,10000);
  if(option<2000) then
  begin
    cMouseMoveRock(29,424);
    cMouseClickRock();
  end
  else if(option<5000) then
  begin
    cMouseMoveRock(46,424);
    cMouseClickRock();
  end
  else
  begin
    cMouseMoveRock(38,424);
    cMouseClickRock();
  end;

        GaussWait(randomRange(5000,6000),50);

option := randomRange(1,10000);
  if(option<2000) then
  begin
    cMouseMove(329,404);
    cMouseClick();
  end
  else if(option<5000) then
  begin
    cMouseMove(338,407);
    cMouseClick();
  end
  else
  begin
    cMouseMove(335,397);
    cMouseClick();
  end;

        GaussWait(randomRange(400,800),50);

option := randomRange(1,10000);
  if(option<2000) then
  begin
    cMouseMove(664,328);
    cMouseClick();
  end
  else if(option<5000) then
  begin
    cMouseMove(662,325);
    cMouseClick();
  end
  else
  begin
    cMouseMove(665,321);
    cMouseClick();
  end;

        GaussWait(randomRange(5000,5800),50);

  ///////////////////////////

  clickfish();

end;

var x,y,isfishing, fishtrynumber: integer;

begin

  rocknumber := 0;

  clickfish();
  Wait(1600);

    repeat //outside loop

      //if(isfishing=0) then

        //
        //if(FindColorTolerance(x,y,0,427, 583,427, 583,10)) then
         //   drop()
         //else
          // clickfish();

          if(FindColorTolerance(x,y,0,700, 656, 725, 678,10)) then
          begin
            WriteLn('pressing esc');
            //Keydown(27);
            Wait(50);
            //Keyup(27);
            wait(500);
            drop();
          end
          else
          begin
           clickfish();
          end



      WriteLn('sleeping');
      GaussWait(randomRange(1600,1700),50);

    until (1>2)
end;
